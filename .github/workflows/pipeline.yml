name: CI/CD Pipeline

on: [push, pull_request]

env:
  MAVEN_OPTS: "-Dmaven.repo.local=./.m2/repository"
  SONAR_HOST_URL: "http://localhost:9000"
  sonar_project: "connectfour"

jobs:
  setup-sonarqube:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Run SonarQube
        run: |
          docker run -d --name sonarqube -p 9000:9000 -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true sonarqube:10.4.1-community

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21.0.2
        uses: actions/setup-java@v2
        with:
          java-version: '21.0.2'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build
        run: mvn compile

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21.0.2
        uses: actions/setup-java@v2
        with:
          java-version: '21.0.2'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Test
        run: mvn test

  analyze:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21.0.2
        uses: actions/setup-java@v2
        with:
          java-version: '21.0.2'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Analyze
        run: mvn sonar:sonar -Dsonar.projectKey=$sonar_project -Dsonar.qualitygate.wait=true

  package:
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21.0.2
        uses: actions/setup-java@v2
        with:
          java-version: '21.0.2'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Package
        run: mvn package

  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy
        run: |
          docker rm -f tomcat
          docker image rm -f connect-four
          docker build -t connect-four .
          docker run --rm -d --name tomcat -p 8080:8080 connect-four